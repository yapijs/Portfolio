import Head from "next/head";
import Image from "next/image";
import styles from "../../styles/Home.module.css";
import React from "react";
import { Button } from "antd";
import { Card, Col, Row } from "antd";
import GitHubCalendar from "react-github-calendar";
import { getContributions } from "../lib/github";
import ActivityCalendar from "react-activity-calendar";
import ReactTooltip from "react-tooltip";

interface Weeks {
  contributionDays: RawContributionDays[];
}

interface RawContributionDays {
  contributionCount: number;
  date: string;
  contributionLevel: ContributionLevel;
}

interface DataContributions {
  date: string;
  count: number;
  level: Level;
}

type ContributionLevel =
  | "NONE"
  | "FIRST_QUARTILE"
  | "SECOND_QUARTILE"
  | "THIRD_QUARTILE"
  | "FORTH_QUARTILE";

type Level = 0 | 1 | 2 | 3 | 4;

function getContributionLevel(level: ContributionLevel): Level {
  let levelNum: Level = 0;
  switch (level) {
    case "NONE":
      break;
    case "FIRST_QUARTILE":
      levelNum = 1;
      break;
    case "SECOND_QUARTILE":
      levelNum = 2;
      break;
    case "THIRD_QUARTILE":
      levelNum = 3;
      break;
    case "FORTH_QUARTILE":
      levelNum = 4;
      break;
  }
  return levelNum;
}

interface Props {
  username: string;
  totalContributions: number;
  dataContributions: DataContributions[];
}

export async function getServerSideProps() {
  const dataIn = await getContributions("yapijs");
  const allWeeks: Weeks[] =
    dataIn.data.user.contributionsCollection.contributionCalendar.weeks;

  const formattedContributionDays: DataContributions[] = allWeeks
    .flatMap((weeks) => {
      return weeks.contributionDays;
    })
    .filter((day) => day.date >= "2022-01-01")
    .map((day) => {
      return {
        date: day.date,
        count: day.contributionCount,
        level: getContributionLevel(day.contributionLevel),
      };
    });

  return {
    props: {
      username: dataIn.data.user.name,
      totalContributions:
        dataIn.data.user.contributionsCollection.contributionCalendar
          .totalContributions,
      dataContributions: formattedContributionDays,
    },
  };
}

const { Meta } = Card;

export default function Home(props: Props) {
  return (
    <div className={styles.container}>
      <Head>
        <title> DƒÅvis portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>{props.username}</h1>
        {/* <Image
          src={props.avatarUrl}
          alt="Landscape picture"
          width={400}
          height={400}
        /> */}
        <div>
          <ActivityCalendar
            data={props.dataContributions}
            color="#86f352"
            labels={{
              legend: {
                less: "Less",
                more: "More",
              },
              months: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
              ],
              tooltip: "<strong>{{count}} contributions</strong> on {{date}}",
              totalCount: "{{count}} contributions in {{year}}",
              weekdays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            }}
            weekStart={1}
          >
            <ReactTooltip html />
          </ActivityCalendar>
        </div>

        <div className="site-card-wrapper">
          <Row gutter={16}>
            <Col span={8}>
              <Card title="Card title" bordered={false}>
                Card content
              </Card>
            </Col>
            <Col span={8}>
              <Card title="Card title" bordered={false}>
                Card content
              </Card>
            </Col>
            <Col span={8}>
              <Card title="Card title" bordered={false}>
                Card content
              </Card>
            </Col>
          </Row>
        </div>
      </main>
    </div>
  );
}
